basePath: /api/v1
definitions:
  GetUsersResponse:
    description: Get users response
    type: object
  UpdateUserRequest:
    description: Update user request
    properties:
      contacts:
        items:
          type: string
        type: array
      description:
        type: string
      name:
        type: string
      surname:
        type: string
    type: object
  User:
    properties:
      contacts:
        items:
          type: string
        type: array
      description:
        type: string
      id:
        type: string
      name:
        type: string
      surname:
        type: string
    type: object
host: localhost:8082
info:
  contact: {}
  description: API Gateway for nbf-project
  title: nbf API
  version: "1.0"
paths:
  /auth/google/callback:
    get:
      consumes:
      - application/json
      description: Authorize user using Google OAuth callback
      parameters:
      - description: OAuth state parameter
        in: query
        name: state
        required: true
        type: string
      - description: OAuth authorization code
        in: query
        name: code
        required: true
        type: string
      responses:
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Google authorize
      tags:
      - auth
  /auth/google/login:
    get:
      consumes:
      - application/json
      description: Получить ссылку на авторизацию Google OAuth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
      summary: Google login URL
      tags:
      - auth
  /auth/logout:
    delete:
      consumes:
      - application/json
      description: Logout user
      responses:
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Logout
      tags:
      - auth
  /auth/refresh:
    head:
      consumes:
      - application/json
      description: Обновляет access и refresh токены
      responses:
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Refresh tokens
      tags:
      - auth
  /auth/yandex/callback:
    get:
      consumes:
      - application/json
      description: Authorize user using Yandex OAuth callback
      parameters:
      - description: OAuth state parameter
        in: query
        name: state
        required: true
        type: string
      - description: OAuth authorization code
        in: query
        name: code
        required: true
        type: string
      responses:
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Yandex authorize
      tags:
      - auth
  /auth/yandex/login:
    get:
      consumes:
      - application/json
      description: Получить ссылку на авторизацию Yandex OAuth
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
      summary: Google Yandex URL
      tags:
      - auth
  /user:
    delete:
      consumes:
      - application/json
      description: Удалить пользователя из системы
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Delete user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Создать нового пользователя в системе
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        "201":
          description: User created successfully
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Обновить данные пользователя пользователя в системе
      parameters:
      - description: User ID
        in: path
        name: uid
        required: true
        type: string
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/UpdateUserRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: Update user
      tags:
      - user
  /user/{uid}:
    get:
      consumes:
      - application/json
      description: Найти пользователя по ID
      parameters:
      - description: User id
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get user
      tags:
      - user
  /user/session:
    get:
      consumes:
      - application/json
      description: Get information about user session
      parameters:
      - description: Authorization header
        in: header
        name: authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/User'
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get session
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Найти несколько пользователей по ID
      parameters:
      - description: Comma-separated user IDs
        example: '"id1,id2,id3"'
        in: query
        name: uids
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/GetUsersResponse'
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get users
      tags:
      - user
swagger: "2.0"
